/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rg8G6f4QFG3W3z3RUnscYT
// Component: mIrHayJGOVmW

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header2 from "../../Header2"; // plasmic-import: WUH7VfVxhz1m/component
import ProductCard from "../../ProductCard"; // plasmic-import: Cn64QEt_4c6p/component
import Ratings from "../../Ratings"; // plasmic-import: UE6yz7QVHJT1/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: o1paKEyJSpbn/component
import BlogPost from "../../BlogPost"; // plasmic-import: VW9Ov9wvUMlr/component
import Footer from "../../Footer"; // plasmic-import: DoVnC_r_MQmz/component
import MenuButton from "../../MenuButton"; // plasmic-import: mayIk_3OkhFT/component

import { useScreenVariants as useScreenVariantsz8CdmF0UmUv8 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: z8cdmF0UmUv8/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: rg8G6f4QFG3W3z3RUnscYT/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: mIrHayJGOVmW/css

import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: RYpXbARn5RL8/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: yN_sGmctU6nB/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: B-h2CqI455Bf/icon
import LogoWhiteSvgIcon from "./icons/PlasmicIcon__LogoWhiteSvg"; // plasmic-import: X-flMK2U-MaR/icon

createPlasmicElementProxy;

export type PlasmicFaq__VariantMembers = {};
export type PlasmicFaq__VariantsArgs = {};
type VariantPropType = keyof PlasmicFaq__VariantsArgs;
export const PlasmicFaq__VariantProps = new Array<VariantPropType>();

export type PlasmicFaq__ArgsType = {};
type ArgPropType = keyof PlasmicFaq__ArgsType;
export const PlasmicFaq__ArgProps = new Array<ArgPropType>();

export type PlasmicFaq__OverridesType = {
  root?: Flex__<"div">;
  foreground2?: Flex__<"div">;
  header?: Flex__<"div">;
  featureItem?: Flex__<typeof FeatureItem>;
  bigPlants?: Flex__<"div">;
  cactuses?: Flex__<"div">;
  menuButton?: Flex__<typeof MenuButton>;
};

export interface DefaultFaqProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFaq__RenderFunc(props: {
  variants: PlasmicFaq__VariantsArgs;
  args: PlasmicFaq__ArgsType;
  overrides: PlasmicFaq__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsz8CdmF0UmUv8()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___9B1L)}>
            <Header2
              className={classNames("__wab_instance", sty.header2___9LubZ)}
            />

            <div className={classNames(projectcss.all, sty.freeBox__kfH2K)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oItRs)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__zvU6H
                    )}
                  >
                    {"Behold our FAQ"}
                  </h1>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__z8M69)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lGy0G
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                        : "All right, friends. Let\u2019s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </div>
          </div>
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4Hyb)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__lKqb3)}>
                <Header2
                  className={classNames("__wab_instance", sty.header2___5Po6T)}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__pSGyo)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ziZbn
                )}
              >
                {"Top Collections"}
              </h2>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__xq5Pf)}
            >
              <div className={classNames(projectcss.all, sty.column__rnB9T)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__bbyM2
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__dz63F)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/galinaNMiziNqvJx5MUnsplashJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1278,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$65.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__z8JUs
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__lbQkA)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__vVbw1
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__vxM20)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/igorSonFvPxCqgtwcUnsplashJpg.jpg",
                        fullWidth: 640,
                        fullHeight: 481,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$80.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__xsZtg
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__vfuXj)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__w7OAh
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__r3VBd)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/scottWebbORwRlTgBrPoUnsplashJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$40.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings___6BZy0
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__dmaZn)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard___8PMti
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__nYtZc)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/freddieMarriageUcfKyTanLuUnsplashJpg.jpg",
                        fullWidth: 640,
                        fullHeight: 427,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  onSale={true}
                  price={"$100.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__eEgOn
                      )}
                      numReviews={"(45 Review)"}
                    />
                  }
                  title={"Product"}
                />
              </div>
            </Stack__>
            <FeatureItem
              data-plasmic-name={"featureItem"}
              data-plasmic-override={overrides.featureItem}
              className={classNames("__wab_instance", sty.featureItem)}
            />

            <div className={classNames(projectcss.all, sty.freeBox___3Z7E8)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0V0P
                )}
              >
                {"Featured Products"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__kQpEa)}
            >
              <div className={classNames(projectcss.all, sty.column__mOOtq)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__gGwhG
                  )}
                  price={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1JyPb
                      )}
                    >
                      {"$160.00"}
                    </div>
                  }
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__unimi
                      )}
                      numReviews={"(12 Review)"}
                      stars={"two"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wyHdM
                      )}
                    >
                      {"Designed Sofa"}
                    </div>
                  }
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__gvokP)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__f9Qyt
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__igH4W)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f2.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$200.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__tyIo
                      )}
                      stars={"four"}
                    />
                  }
                  title={"Dining Table"}
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___1IaZ8)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard___2Pkuw
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___2M9MU)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f3.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$100.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings__a31Gn
                      )}
                      numReviews={"(23 Review)"}
                      stars={"five"}
                    />
                  }
                  title={"Chair and Table"}
                  withReviews={true}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___9O4Nx)}>
                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__e9EFc
                  )}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ytuIy)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/f4.jpg",
                        fullWidth: 270,
                        fullHeight: 310,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  price={"$299.00"}
                  ratings={
                    <Ratings
                      className={classNames(
                        "__wab_instance",
                        sty.ratings___00DCt
                      )}
                      numReviews={"(35 Review)"}
                    />
                  }
                  title={"Modern Arm Chair"}
                  withReviews={true}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__hDVrN)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__opHzs
                )}
              >
                {"Latest Blog"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__rzgI7)}
            >
              <div className={classNames(projectcss.all, sty.column__iHlP)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__th9RA)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___5N8I4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b1.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___2Z1CW)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__pkkSt)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6ECmn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b2.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___3Ozqz)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__rQPhA)}
                  image={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0A45H)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/planty/images/b3.jpg",
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__notQg)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___2YVfw)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"90px"}
                src={{
                  src: "/plasmic/planty/images/adidas.png",
                  fullWidth: 90,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__rs7Tk)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"91px"}
                src={{
                  src: "/plasmic/planty/images/hm.png",
                  fullWidth: 91,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__qe9Oi)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"98px"}
                src={{
                  src: "/plasmic/planty/images/kappa.png",
                  fullWidth: 98,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__g6Ya7)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"124px"}
                src={{
                  src: "/plasmic/planty/images/lacoste.png",
                  fullWidth: 124,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__hoBJ)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"125px"}
                src={{
                  src: "/plasmic/planty/images/levis.png",
                  fullWidth: 125,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
            <Footer
              className={classNames("__wab_instance", sty.footer__nqEo)}
            />
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"bigPlants"}
            data-plasmic-override={overrides.bigPlants}
            hasGap={true}
            className={classNames(projectcss.all, sty.bigPlants)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nFzzN)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__f7Cwz
                )}
              >
                {"Big plants"}
              </h2>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__t4ZK5)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__eiM2I)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ccGi2)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant6Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__bjOhB)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__fWi2O)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ifF1)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___9CKnT
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Donec finibus"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iZJzW
                    )}
                  >
                    {"bigplants"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__bStLy
                    )}
                  >
                    {"$100.00"}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__akpu2)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__soE2D)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant1Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__i9Ktl)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__ukvGw)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__q0BQy)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__enCb3
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Nulla suscipit"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s1GOe
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__teRVu
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__rRiem)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___7DPoJ)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant7Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__s6A23)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__hwsGj)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__chQa5)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__tNkg
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Sed consectetur"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d4WYi
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__jwSoF
                    )}
                  >
                    {"$18.40 "}
                  </h5>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___3ArFx)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant5Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__goCk3)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__lpZ6G)}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___86Z1S)}
                >
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__eGo57
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Vestibulum eget"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ql6Ej
                    )}
                  >
                    {"bigplants "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__wPwr4
                    )}
                  >
                    {"$220.40 "}
                  </h5>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"cactuses"}
            data-plasmic-override={overrides.cactuses}
            hasGap={true}
            className={classNames(projectcss.all, sty.cactuses)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__h85W)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__nn6T
                )}
              >
                {"Cactuses"}
              </h2>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__j2XQx)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__m72GG)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ux0Vz)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant41Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__e6Jr)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg___1P7Xj)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__nNoF)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__wGwGk
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Cras molestie"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gu31
                    )}
                  >
                    {"cactuses "}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__toutl
                    )}
                  >
                    {"$24.99"}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___70Kdk)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ggvzN)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant31Jpg.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__dYz77)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__xymVd)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ncLJ)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__zlO0X
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Curabitur eu tempor"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5HchV
                    )}
                  >
                    {"Cactuses"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5___7Ysg4
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__hIp0D)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oJcVl)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant9Webp.webp",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__sjHJt)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__e8Rp6)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__w6UXu)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__hpiPj
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Fusce sagittis"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ssCdd
                    )}
                  >
                    {"Fusce sagittis"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__a3Dho
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___1AJ3P)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mzOx)}
                  displayHeight={"270px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/planty/images/plant2Webp.webp",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />

                <div className={classNames(projectcss.all, sty.freeBox__ge2Sk)}>
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__poXod)}
                    role={"img"}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__yihiK)}>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__o4Aam
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {"Integer porta"}
                  </PlasmicLink__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wlHdr
                    )}
                  >
                    {"Cactuses"}
                  </div>
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__hNbYu
                    )}
                  >
                    {"$49.40 "}
                  </h5>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__hfLyk)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__g5Kwc)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4___4RII
                )}
              >
                {"How long does shipping take?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hyWmu
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "Now that\u2019s a frequent one all right, ain\u2019t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wsoZ)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qZliD)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg__xwph4)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zNyxS
                    )}
                  >
                    {"US shipping will take between 3 to 5 business days."}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kxikg)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg___6BjF9)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tNnqz
                    )}
                  >
                    {
                      "International shipping will take between 5 and 10 business days."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dw7Ge)}
                >
                  <DotSvgrepoCom1SvgIcon
                    className={classNames(projectcss.all, sty.svg__l4Dne)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___949Fk
                    )}
                  >
                    {
                      "Mars shipping will be automatically redirected to Elon Musk\u2019s Twitter account."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vigJo)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__i0Odz
                )}
              >
                {"How do refunds and returns work?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f8JA
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ommtW)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__otMv)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0UmUi)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__uSYw)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q5Cin
                      )}
                    >
                      {"All discounted items sales are final."}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eVmZe)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__il8Hy)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__de6I
                      )}
                    >
                      {
                        "If you\u2019d like another version of your item, please use the return label. Instructions are printed on its back."
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1Z0Qa)}
                  >
                    <DotSvgrepoCom1SvgIcon
                      className={classNames(projectcss.all, sty.svg__jjlCd)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__em8YK
                      )}
                    >
                      {
                        "If your item is damaged or not functioning correctly, email us at info@planty.com, and we\u2019ll refund you + send you a new one ASAP!"
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qrymy)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__muvsm
                )}
              >
                {"Rapid-fire questions"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rfxAe
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "GDPR, am I right? Make sure you\u2019re as transparent as possible with your data handling process. Or, if you\u2019re using Snipcart, just refer to our ToS and DPA"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dp7Kb)}
            >
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4___1GarE
                )}
              >
                {"How do you handle sensitive customer information?"}
              </h4>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3ZBtC
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                  : "GDPR, am I right? Make sure you\u2019re as transparent as possible with your data handling process. Or, if you\u2019re using Snipcart, just refer to our ToS and DPA"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__d3XQp)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__prZuV)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7MpPp
                    )}
                  >
                    {"Q: Why is this Planty theme so beautiful?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__im6CD
                    )}
                  >
                    {"A: We hired our first designer a couple of months ago."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rk6Gv)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2PL
                    )}
                  >
                    {"Q: Why did you build a theme for Stackbit?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__deKi4
                    )}
                  >
                    {
                      "A: We believe in Stackbit\u2019s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__npEnB)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jUact
                    )}
                  >
                    {"Q: How many people work at Snipcart? "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iJKf
                    )}
                  >
                    {
                      "A: Not a lot! We\u2019re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ctoBz)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6QMv
                    )}
                  >
                    {"Q: Why is Snipcart based in Qu\u00e9bec City?"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ehxUa
                    )}
                  >
                    {"A: Have you been here? It\u2019s beaaautiful!"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__m7RkQ)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d0Hhc
                    )}
                  >
                    {"Q: What\u2019s the meaning of life? "}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7DlMs
                    )}
                  >
                    {
                      "A: We\u2019re not quite sure. But building useful products with people we love feels meaningful enough."
                    }
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </div>
          <Footer className={classNames("__wab_instance", sty.footer__vucml)} />

          <div className={classNames(projectcss.all, sty.freeBox__qJGvU)}>
            <div className={classNames(projectcss.all, sty.freeBox__frzGx)}>
              <div className={classNames(projectcss.all, sty.columns___3CGsc)}>
                <div className={classNames(projectcss.all, sty.column__tVk51)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__knTx3)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "562px"
                        : "562px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "947px"
                        : "947px"
                    }
                    loading={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? {
                            src: "/plasmic/planty/images/promoWebp.webp",
                            fullWidth: 720,
                            fullHeight: 525,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/planty/images/promoWebp.webp",
                            fullWidth: 720,
                            fullHeight: 525,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__s5Ri)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__kuzee
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Behold our FAQ"
                      : "Still have questions?\nContact us. "}
                  </h1>
                  <div
                    className={classNames(projectcss.all, sty.columns__pRh2M)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__eq4CN)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eTwk1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "226 rue St-Joseph E, \nQu\u00e9bec, QC, Canada, \nG1K 3A9"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e2Yu6
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "+1-202-555-0112"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__xqUji)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tRWV
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Behold our FAQ"
                          : "geeks@snipcart.com"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jWjrQ
                        )}
                      >
                        <Stack__
                          as={PlasmicLink__}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__kefI
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          <LocationSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rWpRm
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lhFpn
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Discover"
                              : "On the map"}
                          </div>
                        </Stack__>
                      </div>
                    </Stack__>
                  </div>
                </Stack__>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__miOas)}>
              <div className={classNames(projectcss.all, sty.freeBox___0T1Fh)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rdNio)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__oNmv6)}
                  >
                    <MenuButton
                      data-plasmic-name={"menuButton"}
                      data-plasmic-override={overrides.menuButton}
                      className={classNames("__wab_instance", sty.menuButton)}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qDwtP)}
                    >
                      <PlasmicIcon__
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? LogoWhiteSvgIcon
                            : LogoWhiteSvgIcon
                        }
                        className={classNames(projectcss.all, sty.svg__udA93)}
                        role={"img"}
                      />

                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__lbxaP
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/store`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Store"
                          : "Store"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___23Pzb
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/about`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "About"
                          : "About"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__m0MAz
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "#"
                            : `/faq`
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Faq"
                          : "Faq"}
                      </PlasmicLink__>
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vMhtv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ok2Fo
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "\u00a9 Company. All rights reserved. This site proudly built with "
                          : "\u00a9 Company. All rights reserved. This site proudly built with "}
                      </div>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__wdRhs
                        )}
                        component={Link}
                        href={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "https://www.plasmic.app/"
                            : "https://www.plasmic.app/"
                        }
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "Plasmic"
                          : "Plasmic"}
                      </PlasmicLink__>
                    </div>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],
  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground2: "div";
  header: "div";
  featureItem: typeof FeatureItem;
  bigPlants: "div";
  cactuses: "div";
  menuButton: typeof MenuButton;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFaq__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFaq__VariantsArgs;
    args?: PlasmicFaq__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFaq__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFaq__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),

    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
